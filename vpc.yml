AWSTemplateFormatVersion: 2010-09-09
Description: Buildkite On-Demand Default Vpc

Parameters:
  PrivateSubnets:
    Type: String
    Description: Create a private VPC subnet and NAT Gateway in each availability zone.
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'

Conditions:
  CreatePrivateSubnets: !Equals [ !Ref PrivateSubnets, 'true' ]

Mappings:
  SubnetConfig:
    VPC:
      CIDR: 10.0.0.0/16
    AZOne:
      Public: 10.0.0.0/24
      Private: 10.0.1.0/24
    AZTwo:
      Public: 10.0.2.0/24
      Private: 10.0.3.0/24

Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock: !FindInMap [SubnetConfig, VPC, CIDR]

  InternetGateway:
    Type: AWS::EC2::InternetGateway
  GatewayAttachement:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref InternetGateway

  AZOne:
    Type: AWS::CloudFormation::Stack
    DependsOn: GatewayAttachement
    Properties:
      TemplateURL: vpc/availability_zone.yml
      Parameters:
        Vpc: !Ref Vpc
        InternetGateway: !Ref InternetGateway
        AvailabilityZone: 
          Fn::Select:
            - 0
            - Fn::GetAZs: !Ref AWS::Region
        PublicCidr: !FindInMap [SubnetConfig, AZOne, Public]
        PrivateCidr:
          !If
            - CreatePrivateSubnets
            - !FindInMap [SubnetConfig, AZOne, Private]
            - ''

  AZTwo:
    Type: AWS::CloudFormation::Stack
    DependsOn: GatewayAttachement
    Properties:
      TemplateURL: vpc/availability_zone.yml
      Parameters:
        Vpc: !Ref Vpc
        InternetGateway: !Ref InternetGateway
        AvailabilityZone:
          Fn::Select:
            - 1
            - Fn::GetAZs: !Ref AWS::Region
        PublicCidr: !FindInMap [SubnetConfig, AZTwo, Public]
        PrivateCidr:
          !If
            - CreatePrivateSubnets
            - !FindInMap [SubnetConfig, AZTwo, Private]
            - ''

  AgentContainerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to the containers
      VpcId: !Ref Vpc
  AgentContainerSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress from self
      GroupId: !Ref AgentContainerSecurityGroup
      IpProtocol: -1
      SourceSecurityGroupId: !Ref AgentContainerSecurityGroup
  AgentContainerSecurityGroupEgressV4:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Egress to anywhere IPv4
      GroupId: !Ref AgentContainerSecurityGroup
      IpProtocol: -1
      CidrIp: 0.0.0.0/0
  AgentContainerSecurityGroupEgressV6:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Egress to anywhere IPv6
      GroupId: !Ref AgentContainerSecurityGroup
      IpProtocol: -1
      CidrIpv6: ::/0

Outputs:
  PublicSubnetIds:
    Description: Public VPC Subnet Ids, have a route to the Internet Gateway.
    Value: !Join [ ',', [ !GetAtt AZOne.Outputs.PublicSubnetId, !GetAtt AZTwo.Outputs.PublicSubnetId ] ]
  PrivateSubnetIds:
    Description: Private VPC Subnet Ids, have a route to the NAT Gateway. Depends on the PrivateSubnets parameter.
    Value:
      !If
        - CreatePrivateSubnets
        - !Join [ ',', [ !GetAtt AZOne.Outputs.PrivateSubnetId, !GetAtt AZTwo.Outputs.PrivateSubnetId ] ]
        - ''
  SecurityGroup:
    Description: Security group for buildkite-agent containers.
    Value: !GetAtt AgentContainerSecurityGroup.GroupId
